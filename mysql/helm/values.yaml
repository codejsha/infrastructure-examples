---
nameOverride: ""
fullnameOverride: ""
clusterDomain: cluster.local
commonAnnotations: {}
commonLabels: {}

diagnosticMode:
  enabled: false

architecture: standalone

auth:
  rootPassword: "${ROOT_PASSWORD}"
  database: mysqldb
  username: "${DATABASE_USERNAME}"
  password: "${DATABASE_PASSWORD}"
  # replicationUser: "${REPLICATION_USERNAME}"
  # replicationPassword: "${REPLICATION_PASSWORD}"

# initdbScriptsConfigMap: ""

primary:
  configuration: |-
    [mysqld]
    default_authentication_plugin=mysql_native_password
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mysql
    plugin_dir=/opt/bitnami/mysql/lib/plugin
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    datadir=/bitnami/mysql/data
    tmpdir=/opt/bitnami/mysql/tmp
    max_allowed_packet=16M
    bind-address=0.0.0.0
    pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
    log-error=/opt/bitnami/mysql/logs/mysqld.log
    character-set-server=UTF8
    collation-server=utf8_general_ci

    [client]
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    default-character-set=UTF8
    plugin_dir=/opt/bitnami/mysql/lib/plugin

    [manager]
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    pid-file=/opt/bitnami/mysql/tmp/mysqld.pid

  affinity: {}
  nodeSelector: {}
  tolerations: []

  podSecurityContext:
    enabled: true
    fsGroup: 1001
  containerSecurityContext:
    enabled: true
    runAsUser: 1001

  resources:
    ## Example:
    ## limits:
    ##    cpu: 250m
    ##    memory: 256Mi
    limits: {}
    ## Examples:
    ## requests:
    ##    cpu: 250m
    ##    memory: 256Mi
    requests: {}

  persistence:
    enabled: true
    # storageClass: ""
    # storageClass: "standard"
    # storageClass: "rook-ceph-block"
    annotations: {}
    accessModes:
      - ReadWriteOnce
    size: 100Gi

  service:
    type: ClusterIP
    port: 3306
    nodePort: ""
    annotations: {}

  pdb:
    enabled: false

serviceAccount:
  create: true
  annotations: {}

rbac:
  create: false

networkPolicy:
  enabled: false

volumePermissions:
  enabled: false

metrics:
  enabled: false
  service:
    type: ClusterIP
    port: 9104
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "{{ .Values.metrics.service.port }}"
  extraArgs:
    primary: []
    secondary: []
  resources:
    ## Example:
    ## limits:
    ##    cpu: 100m
    ##    memory: 256Mi
    limits: {}
    ## Examples:
    ## requests:
    ##    cpu: 100m
    ##    memory: 256Mi
    requests: {}

  serviceMonitor:
    enabled: false
    interval: 30s
    scrapeTimeout: ""
    relabellings: []
    honorLabels: false
    additionalLabels: {}
