# docker

function docker() { echo "+ docker ${@}">&2; command docker ${@}; }

alias dcattach="docker container attach"
function dcexecbash() { CONTAINER_NAME="${1}"; if [ -n "${CONTAINER_NAME}" ]; then docker container exec --interactive --tty ${1} /bin/bash; fi; }
function dcexecsh() { CONTAINER_NAME="${1}"; if [ -n "${CONTAINER_NAME}" ]; then docker container exec --interactive --tty ${1} /bin/sh; fi; }
alias dclo="docker container logs --follow"
alias dclon="docker container logs --follow --tail"
alias dcls="docker container ls"
alias dclsall="docker container ls --all"
alias dcstart="docker container start"
alias dcstop="docker container stop"
alias dcrm="docker container rm"
alias dcrmall="docker container rm \$(docker container ls --all --quiet)"
alias dcrmall-force="docker container rm --force \$(docker container ls --all --quiet)"
alias dcrm-force="docker container rm --force"
alias dcrm-unused="docker container prune --force"
alias dcrun="docker container run"

alias dhistory="docker history"

function dhubimtags() { curl --silent "https://registry.hub.docker.com/v2/repositories/library/${1}/tags/" | jq '."results"[]["name"]' | tr -d '"'; }

alias dimbuild="docker image build"
alias dimls="docker image ls"
alias dimrm="docker image rm"
alias dimrm-dangling="docker image rm \$(docker image ls --all --quiet --filter dangling=true)"
alias dimrm-unused="docker image prune --force"
alias dimrmall="docker image rm \$(docker image ls --all --quiet)"
alias dimrmall-force="docker image rm --force \$(docker image ls --all --quiet)"
alias dimpush="docker image push"
alias dimtag="docker image tag"

alias dinspect="docker inspect"

alias dnetcreate="docker network create"
alias dnetls="docker network ls"
alias dnetrm="docker network rm"
alias dnetrm-unused="docker network prune --force"

alias dpull="docker pull"

alias dsearch="docker search"
alias dsearch-official="docker search --filter=is-official=true"

alias dvolcreate="docker volume create"
alias dvolls="docker volume ls"
alias dvolrm="docker volume rm"
alias dvolrm-unused="docker volume prune --force"
