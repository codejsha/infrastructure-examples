# SPDX-License-Identifier: APACHE-2.0
# SPDX-FileCopyrightText: Copyright 2021-2024 Jinseong Ha

services:
  zookeeper1:
    image: harbor.example.com/library/bitnami/zookeeper:3.9
    hostname: zookeeper1
    environment:
      ZOO_TICK_TIME: 2000
      ZOO_INIT_LIMIT: 10
      ZOO_SYNC_LIMIT: 5
      ZOO_MAX_CLIENT_CNXNS: 0
      ZOO_SERVER_ID: 1
      ZOO_SERVERS: zookeeper1:2888:3888,zookeeper2:2888:3888,zookeeper3:2888:3888
      JVMFLAGS: -javaagent:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.20.0.jar=1234:/usr/share/jmx-exporter/zookeeper.yml
      ALLOW_ANONYMOUS_LOGIN: "yes"
      ZOO_4LW_COMMANDS_WHITELIST: srvr,mntr,ruok
    networks:
      stream-network:
        aliases:
          - zookeeper
    volumes:
      - zookeeper_volume1:/bitnami/zookeeper

  zookeeper2:
    image: harbor.example.com/library/bitnami/zookeeper:3.9
    hostname: zookeeper2
    environment:
      ZOO_TICK_TIME: 2000
      ZOO_INIT_LIMIT: 10
      ZOO_SYNC_LIMIT: 5
      ZOO_MAX_CLIENT_CNXNS: 0
      ZOO_SERVER_ID: 2
      ZOO_SERVERS: zookeeper1:2888:3888,zookeeper2:2888:3888,zookeeper3:2888:3888
      JVMFLAGS: -javaagent:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.20.0.jar=1234:/usr/share/jmx-exporter/zookeeper.yml
      ALLOW_ANONYMOUS_LOGIN: "yes"
      ZOO_4LW_COMMANDS_WHITELIST: srvr,mntr,ruok
    networks:
      stream-network:
        aliases:
          - zookeeper
    volumes:
      - zookeeper_volume2:/bitnami/zookeeper

  zookeeper3:
    image: harbor.example.com/library/bitnami/zookeeper:3.9
    hostname: zookeeper3
    environment:
      ZOO_TICK_TIME: 2000
      ZOO_INIT_LIMIT: 10
      ZOO_SYNC_LIMIT: 5
      ZOO_MAX_CLIENT_CNXNS: 0
      ZOO_SERVER_ID: 3
      ZOO_SERVERS: zookeeper1:2888:3888,zookeeper2:2888:3888,zookeeper3:2888:3888
      JVMFLAGS: -javaagent:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.20.0.jar=1234:/usr/share/jmx-exporter/zookeeper.yml
      ALLOW_ANONYMOUS_LOGIN: "yes"
      ZOO_4LW_COMMANDS_WHITELIST: srvr,mntr,ruok
    networks:
      stream-network:
        aliases:
          - zookeeper
    volumes:
      - zookeeper_volume3:/bitnami/zookeeper

  kafka-broker1:
    image: harbor.example.com/library/bitnami/kafka:3.8
    hostname: kafka-broker1
    ports:
      - 30001:9092
    environment:
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_HEAP_OPTS=-Xmx1g -Xms1g
      - EXTRA_ARGS=-javaagent:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.20.0.jar=1234:/usr/share/jmx-exporter/kafka_broker.yml

      - KAFKA_CFG_LISTENERS=INTERNAL://:9091,EXTERNAL://:9092,BROKER://:9093,CONTROLLER://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka-broker1:9091,EXTERNAL://kafka-broker1:9092,BROKER://kafka-broker1:9093,CONTROLLER://kafka-broker1:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,BROKER:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=BROKER
      - KAFKA_CFG_CONTROL_PLANE_LISTENER_NAME=CONTROLLER
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper1:2181,zookeeper2:2181,zookeeper3:2181/clusterlocal

      - KAFKA_CFG_LOG_RETENTION_HOURS=168
      # - KAFKA_CFG_LOG_RETENTION_BYTES=1073741824
      - KAFKA_CFG_LOG_RETENTION_CHECK_INTERVAL_MS=300000
      - KAFKA_CFG_LOG_SEGMENT_BYTES=1073741824
      - KAFKA_CFG_LOG_CLEANUP_POLICY=delete
      # - KAFKA_CFG_LOG_CLEANER_ENABLE=true
      # - KAFKA_CFG_LOG_CLEANER_THREADS=1

      - KAFKA_CFG_NUM_IO_THREADS=16
      - KAFKA_CFG_NUM_NETWORK_THREADS=8
      - KAFKA_CFG_NUM_PARTITIONS=3
      - KAFKA_CFG_NUM_RECOVERY_THREADS_PER_DATA_DIR=2

      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_CFG_MIN_INSYNC_REPLICAS=2
      - KAFKA_CFG_REPLICA_LAG_TIME_MAX_MS=30000
      - KAFKA_CFG_UNCLEAN_LEADER_ELECTION_ENABLE=false

      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_GROUP_INITIAL_REBALANCE_DELAY_MS=3000
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3
    networks:
      stream-network:
        aliases:
          - kafka-broker
    volumes:
      - kafka_broker_volume1:/bitnami/kafka
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3

  kafka-broker2:
    image: harbor.example.com/library/bitnami/kafka:3.8
    hostname: kafka-broker2
    ports:
      - 30002:9092
    environment:
      - KAFKA_CFG_BROKER_ID=2
      - KAFKA_HEAP_OPTS=-Xmx1g -Xms1g
      - EXTRA_ARGS=-javaagent:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.20.0.jar=1234:/usr/share/jmx-exporter/kafka_broker.yml

      - KAFKA_CFG_LISTENERS=INTERNAL://:9091,EXTERNAL://:9092,BROKER://:9093,CONTROLLER://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka-broker2:9091,EXTERNAL://kafka-broker2:9092,BROKER://kafka-broker2:9093,CONTROLLER://kafka-broker2:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,BROKER:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=BROKER
      - KAFKA_CFG_CONTROL_PLANE_LISTENER_NAME=CONTROLLER
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper1:2181,zookeeper2:2181,zookeeper3:2181/clusterlocal

      - KAFKA_CFG_LOG_RETENTION_HOURS=168
      # - KAFKA_CFG_LOG_RETENTION_BYTES=1073741824
      - KAFKA_CFG_LOG_RETENTION_CHECK_INTERVAL_MS=300000
      - KAFKA_CFG_LOG_SEGMENT_BYTES=1073741824
      - KAFKA_CFG_LOG_CLEANUP_POLICY=delete
      # - KAFKA_CFG_LOG_CLEANER_ENABLE=true
      # - KAFKA_CFG_LOG_CLEANER_THREADS=1

      - KAFKA_CFG_NUM_IO_THREADS=16
      - KAFKA_CFG_NUM_NETWORK_THREADS=8
      - KAFKA_CFG_NUM_PARTITIONS=3
      - KAFKA_CFG_NUM_RECOVERY_THREADS_PER_DATA_DIR=2

      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_CFG_MIN_INSYNC_REPLICAS=2
      - KAFKA_CFG_REPLICA_LAG_TIME_MAX_MS=30000
      - KAFKA_CFG_UNCLEAN_LEADER_ELECTION_ENABLE=false

      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_GROUP_INITIAL_REBALANCE_DELAY_MS=3000
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3
    networks:
      stream-network:
        aliases:
          - kafka-broker
    volumes:
      - kafka_broker_volume2:/bitnami/kafka
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3

  kafka-broker3:
    image: harbor.example.com/library/bitnami/kafka:3.8
    hostname: kafka-broker3
    ports:
      - 30003:9092
    environment:
      - KAFKA_CFG_BROKER_ID=3
      - KAFKA_HEAP_OPTS=-Xmx1g -Xms1g
      - EXTRA_ARGS=-javaagent:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.20.0.jar=1234:/usr/share/jmx-exporter/kafka_broker.yml

      - KAFKA_CFG_LISTENERS=INTERNAL://:9091,EXTERNAL://:9092,BROKER://:9093,CONTROLLER://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka-broker3:9091,EXTERNAL://kafka-broker3:9092,BROKER://kafka-broker3:9093,CONTROLLER://kafka-broker3:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,BROKER:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=BROKER
      - KAFKA_CFG_CONTROL_PLANE_LISTENER_NAME=CONTROLLER
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper1:2181,zookeeper2:2181,zookeeper3:2181/clusterlocal

      - KAFKA_CFG_LOG_RETENTION_HOURS=168
      # - KAFKA_CFG_LOG_RETENTION_BYTES=1073741824
      - KAFKA_CFG_LOG_RETENTION_CHECK_INTERVAL_MS=300000
      - KAFKA_CFG_LOG_SEGMENT_BYTES=1073741824
      - KAFKA_CFG_LOG_CLEANUP_POLICY=delete
      # - KAFKA_CFG_LOG_CLEANER_ENABLE=true
      # - KAFKA_CFG_LOG_CLEANER_THREADS=1

      - KAFKA_CFG_NUM_IO_THREADS=16
      - KAFKA_CFG_NUM_NETWORK_THREADS=8
      - KAFKA_CFG_NUM_PARTITIONS=3
      - KAFKA_CFG_NUM_RECOVERY_THREADS_PER_DATA_DIR=2

      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_CFG_MIN_INSYNC_REPLICAS=2
      - KAFKA_CFG_REPLICA_LAG_TIME_MAX_MS=30000
      - KAFKA_CFG_UNCLEAN_LEADER_ELECTION_ENABLE=false

      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_GROUP_INITIAL_REBALANCE_DELAY_MS=3000
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3
    networks:
      stream-network:
        aliases:
          - kafka-broker
    volumes:
      - kafka_broker_volume3:/bitnami/kafka
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3

  schema-registry1:
    image: harbor.example.com/library/confluentinc/cp-schema-registry:7.7.0
    hostname: schema-registry1
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_OPTS: -javaagent:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.20.0.jar=1234:/usr/share/jmx-exporter/confluent_schemaregistry.yml
      SCHEMA_REGISTRY_HOST_NAME: schema-registry1
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka-broker1:9091,kafka-broker2:9091,kafka-broker3:9091
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_SCHEMA_COMPATIBILITY_LEVEL: backward
    networks:
      stream-network:
        aliases:
          - schema-registry
    depends_on:
      - kafka-broker1
      - kafka-broker2
      - kafka-broker3

  connect-worker1:
    image: harbor.example.com/library/debezium/connect:2.7
    hostname: connect-worker1
    ports:
      - 8083
    environment:
      EXTRA_ARGS: -javaagent:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.20.0.jar=1234:/usr/share/jmx-exporter/kafka_connect.yml
      GROUP_ID: connect-cluster1
      BOOTSTRAP_SERVERS: kafka-broker1:9091,kafka-broker2:9091,kafka-broker3:9091
      CONFIG_STORAGE_TOPIC: _connect-configs
      OFFSET_STORAGE_TOPIC: _connect-offsets
      STATUS_STORAGE_TOPIC: _connect-status
      KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry1:8081
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry1:8081
    networks:
      stream-network:
        aliases:
          - connect-cluster1
    depends_on:
      - kafka-broker1
      - kafka-broker2
      - kafka-broker3
      - schema-registry1

  connect-worker2:
    image: harbor.example.com/library/confluentinc/cp-kafka-connect-custom:7.7.0
    hostname: connect-worker2
    ports:
      - 8083
    environment:
      EXTRA_ARGS: -javaagent:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.20.0.jar=1234:/usr/share/jmx-exporter/kafka_connect.yml
      CONNECT_BOOTSTRAP_SERVERS: kafka-broker1:9091,kafka-broker2:9091,kafka-broker3:9091
      CONNECT_REST_PORT: 8083
      CONNECT_REST_ADVERTISED_HOST_NAME: connect-worker2
      CONNECT_GROUP_ID: connect-cluster2
      CONNECT_CONFIG_STORAGE_TOPIC: _connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: _connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: _connect-status
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry1:8081
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry1:8081
      CONNECT_KEY_CONVERTER_ENHANCED_AVRO_SCHEMA_SUPPORT: true
      CONNECT_VALUE_CONVERTER_ENHANCED_AVRO_SCHEMA_SUPPORT: true
      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components
    networks:
      stream-network:
        aliases:
          - connect-cluster2
    depends_on:
      - kafka-broker1
      - kafka-broker2
      - kafka-broker3
      - schema-registry1

  prometheus:
    image: harbor.example.com/library/prom/prometheus:v2.53.2
    hostname: prometheus
    ports:
      - 9090:9090
    networks:
      - stream-network

  grafana:
    image: harbor.example.com/library/grafana/grafana:11.1.4
    hostname: grafana
    ports:
      - 3000:3000
    environment:
      GF_INSTALL_PLUGINS: grafana-piechart-panel
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: false
    networks:
      - stream-network

  kafka-lag-exporter:
    image: harbor.example.com/library/lightbend/kafka-lag-exporter:0.6.8
    hostname: kafka-lag-exporter
    networks:
      - stream-network

  burrow:
    image: harbor.example.com/library/linkedin/burrow:1.8.0
    hostname: burrow
    ports:
      - 8000:8000
    networks:
      - stream-network
    depends_on:
      - kafka-broker1
      - kafka-broker2
      - kafka-broker3

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    hostname: kafka-ui
    ports:
      - 9080:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: clusterlocal
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-broker1:9091,kafka-broker2:9091,kafka-broker3:9091
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry1:8081
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: connect-cluster1
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: connect-worker1:8083
      KAFKA_CLUSTERS_0_KAFKACONNECT_1_NAME: connect-cluster2
      KAFKA_CLUSTERS_0_KAFKACONNECT_1_ADDRESS: connect-worker2:8083
    networks:
      - stream-network
    depends_on:
      - kafka-broker1
      - kafka-broker2
      - kafka-broker3
      - schema-registry1
      - connect-worker1
      - connect-worker2

  kafka-client:
    image: harbor.example.com/library/bitnami/kafka:3.8
    hostname: kafka-client
    entrypoint: tail -f /dev/null
    networks:
      - stream-network

networks:
  stream-network:
    driver: bridge

volumes:
  zookeeper_volume1:
    driver: local
  zookeeper_volume2:
    driver: local
  zookeeper_volume3:
    driver: local
  kafka_broker_volume1:
    driver: local
  kafka_broker_volume2:
    driver: local
  kafka_broker_volume3:
    driver: local
