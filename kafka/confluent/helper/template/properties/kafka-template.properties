######################################################################
### Server Basics
######################################################################

broker.id=
# broker.rack=

######################################################################
### Socket Server Settings
######################################################################

listeners=
advertised.listeners=
# listener.security.protocol.map=PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
num.network.threads=3
num.io.threads=8
socket.send.buffer.bytes=102400
socket.receive.buffer.bytes=102400
socket.request.max.bytes=104857600

######################################################################
### Zookeeper
######################################################################

zookeeper.connect=
zookeeper.connection.timeout.ms=18000

######################################################################
### Log Basics
######################################################################

log.dirs=
num.partitions=3
num.recovery.threads.per.data.dir=1
# auto.create.topics.enable=true
auto.create.topics.enable=false
# message.max.bytes=
log.cleanup.policy=delete
# log.cleanup.policy=compact
# log.cleanup.policy=compact,delete

######################################################################
### Replica Settings
######################################################################

default.replication.factor=3
min.insync.replicas=2
replica.lag.time.max.ms=30000
unclean.leader.election.enable=false

######################################################################
### Internal Topic Settings
######################################################################

offsets.topic.replication.factor=3
transaction.state.log.replication.factor=3
transaction.state.log.min.isr=2

######################################################################
### Log Flush Policy
######################################################################

# log.flush.interval.messages=10000
# log.flush.interval.ms=1000

######################################################################
### Log Retention Policy
######################################################################

log.retention.hours=168
# log.retention.minutes=10080
# log.retention.ms=
# log.retention.bytes=1073741824
log.segment.bytes=1073741824
log.retention.check.interval.ms=300000

######################################################################
### Log Compaction Policy
######################################################################

# log.cleaner.enable=true
# log.cleaner.threads=1

######################################################################
### Multi-cluster Schema Registry
######################################################################

# confluent.http.server.listeners=
# confluent.schema.registry.url=

######################################################################
### Confluent Metrics Reporter
######################################################################

metric.reporters=io.confluent.metrics.reporter.ConfluentMetricsReporter
confluent.metrics.reporter.bootstrap.servers=
# confluent.metrics.reporter.zookeeper.connect=
confluent.metrics.reporter.topic.replicas=3

######################################################################
### Group Coordinator Settings
######################################################################

group.initial.rebalance.delay.ms=3000

######################################################################
### Confluent Authorizer Settings
######################################################################

# authorizer.class.name=io.confluent.kafka.security.authorizer.ConfluentServerAuthorizer
# super.users=
# confluent.license=
# confluent.license.topic.replication.factor=3
# confluent.authorizer.access.rule.providers=ZK_ACL,CONFLUENT
# confluent.metadata.bootstrap.servers=PLAINTEXT://127.0.0.1:9092
# confluent.metadata.topic.replication.factor=3
# confluent.security.event.logger.exporter.kafka.topic.replicas=3
# confluent.metadata.server.listeners=http://0.0.0.0:8090
# confluent.metadata.server.advertised.listeners=http://127.0.0.1:8090

######################################################################
### Confluent Data Balancer Settings
######################################################################

confluent.balancer.enable=true
confluent.balancer.heal.uneven.load.trigger=EMPTY_BROKER
# confluent.balancer.heal.uneven.load.trigger=ANY_UNEVEN_LOAD
confluent.balancer.heal.broker.failure.threshold.ms=3600000
# confluent.balancer.heal.broker.failure.threshold.ms=-1
confluent.balancer.throttle.bytes.per.second=10485760
# confluent.balancer.max.replicas=10000
confluent.balancer.disk.max.load=0.85
# confluent.balancer.network.in.max.bytes.per.second=10485760
# confluent.balancer.network.out.max.bytes.per.second=10485760
# confluent.balancer.exclude.topic.names=
# confluent.balancer.exclude.topic.prefixes=
confluent.balancer.topic.replication.factor=3

######################################################################
### Confluent Telemetry Settings
######################################################################

# confluent.telemetry.enabled=true
# confluent.telemetry.api.key=<CLOUD_API_KEY>
# confluent.telemetry.api.secret=<CCLOUD_API_SECRET>

######################################################################
### Tiered Storage Settings
######################################################################

confluent.tier.enable=false
# confluent.tier.enable=true
# confluent.tier.feature=true
# confluent.tier.backend=S3
# confluent.tier.s3.region=ap-northeast-2
# confluent.tier.s3.bucket=kafka-tiered-storage
# confluent.tier.s3.aws.endpoint.override=
# confluent.tier.s3.cred.file.path=/usr/local/confluent/aws/credentials
# confluent.tier.s3.sse.algorithm=none
# confluent.tier.metadata.replication.factor=3
# confluent.tier.local.hotset.ms=3600000
# confluent.tier.local.hotset.bytes=1073741824
