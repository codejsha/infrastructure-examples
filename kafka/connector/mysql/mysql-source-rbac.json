{
  "name": "mysql-source",
  "config": {
    "connector.class": "io.debezium.connector.mysql.MySqlConnector",
    "tasks.max": "1",
    "database.hostname": "mysql.example.com",
    "database.port": "3306",
    "database.user": "debezium",
    "database.password": "dbz",
    "database.server.id": "5400",
    "database.server.name": "database2",
    "database.serverTimezone": "Asia/Seoul",
    "database.allowPublicKeyRetrieval": "true",
    "database.history.kafka.topic": "database2-history-sakila",
    "database.include.list": "sakila",
    "table.include.list": "sakila.*",
    "time.precision.mode": "adaptive_time_microseconds",
    "decimal.handling.mode": "precise",
    "include.schema.changes": "true",
    "connect.keep.alive": "true",
    "tombstones.on.delete": "true",
    "snapshot.mode": "initial",
    "max.queue.size": "8192",
    "max.batch.size": "2048",
    "poll.interval.ms": "1000",
    "connect.timeout.ms": "30000",
    "sanitize.field.names": "true",
    "transforms": "Unwrap,Reroute",
    "transforms.Unwrap.type": "io.debezium.transforms.ExtractNewRecordState",
    "transforms.Reroute.type": "io.debezium.transforms.ByLogicalTableRouter",
    "transforms.Reroute.topic.regex": "database2.sakila.(.*)",
    "transforms.Reroute.topic.replacement": "database2-sakila-$1",
    "database.history.kafka.bootstrap.servers": "kafka1.example.com:9091,kafka2.example.com:9091,kafka3.example.com:9091",
    "database.history.producer.security.protocol": "SSL",
    "database.history.producer.ssl.truststore.location": "/opt/confluent/ssl/kafka_broker.truststore.jks",
    "database.history.producer.ssl.truststore.password": "confluenttruststorepass",
    "database.history.producer.ssl.keystore.location": "/opt/confluent/ssl/kafka_broker.keystore.jks",
    "database.history.producer.ssl.keystore.password": "confluentkeystorestorepass",
    "database.history.producer.ssl.key.password": "confluentkeystorestorepass",
    "database.history.consumer.security.protocol": "SSL",
    "database.history.consumer.ssl.truststore.location": "/opt/confluent/ssl/kafka_broker.truststore.jks",
    "database.history.consumer.ssl.truststore.password": "confluenttruststorepass",
    "database.history.consumer.ssl.keystore.location": "/opt/confluent/ssl/kafka_broker.keystore.jks",
    "database.history.consumer.ssl.keystore.password": "confluentkeystorestorepass",
    "database.history.consumer.ssl.key.password": "confluentkeystorestorepass",
    "key.converter": "io.confluent.connect.avro.AvroConverter",
    "key.converter.schema.registry.url": "https://schema-registry1.example.com:8081,https://schema-registry2.example.com:8081",
    "key.converter.schema.registry.ssl.truststore.location": "/opt/confluent/ssl/schema_registry.truststore.jks",
    "key.converter.schema.registry.ssl.truststore.password": "confluenttruststorepass",
    "key.converter.schema.registry.ssl.keystore.location": "/opt/confluent/ssl/schema_registry.keystore.jks",
    "key.converter.schema.registry.ssl.keystore.password": "confluentkeystorestorepass",
    "key.converter.schema.registry.ssl.key.password": "confluentkeystorestorepass",
    "key.converter.schema.registry.basic.auth.credentials.source": "USER_INFO",
    "key.converter.schema.registry.basic.auth.user.info": "schema-registry:schema-registry-secret",
    "value.converter": "io.confluent.connect.avro.AvroConverter",
    "value.converter.schema.registry.url": "https://schema-registry1.example.com:8081,https://schema-registry2.example.com:8081",
    "value.converter.schema.registry.ssl.truststore.location": "/opt/confluent/ssl/schema_registry.truststore.jks",
    "value.converter.schema.registry.ssl.truststore.password": "confluenttruststorepass",
    "value.converter.schema.registry.ssl.keystore.location": "/opt/confluent/ssl/schema_registry.keystore.jks",
    "value.converter.schema.registry.ssl.keystore.password": "confluentkeystorestorepass",
    "value.converter.schema.registry.ssl.key.password": "confluentkeystorestorepass",
    "value.converter.schema.registry.basic.auth.credentials.source": "USER_INFO",
    "value.converter.schema.registry.basic.auth.user.info": "schema-registry:schema-registry-secret",
    "producer.override.sasl.jaas.config": "org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required username=\"kafka-connect\" password=\"kafka-connect-secret\" metadataServerUrls=\"https://kafka1.example.com:8090,https://kafka2.example.com:8090,https://kafka3.example.com:8090\";"
  }
}
