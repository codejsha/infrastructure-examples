# nameOverride:
# fullnameOverride:

sources:
  # - crd
  - service
  - ingress
  # - contour-httpproxy

provider: coredns

namespace: ""
fqdnTemplates: []
combineFQDNAnnotation: false
ignoreHostnameAnnotation: false
publishInternalServices: false
publishHostIP: false
serviceTypeFilter: []

coredns:
  etcdEndpoints: "https://my-etcd:2379"
  ## Configuration of the secure communication and client authentication to the etcd cluster
  ## If enabled all the values under this key must hold a valid data
  ##
  etcdTLS:
    ## Enable or disable secure communication and client authentication to the etcd cluster
    ##
    enabled: false
    ## Name of the existing secret containing cert files for client communication
    ## ref: https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/security.md
    ## ref (secret creation):
    ##  https://github.com/bitnami/charts/tree/master/bitnami/etcd#configure-certificates-for-client-communication
    ##
    secretName: "etcd-client-certs"
    ## Location of the mounted certificates inside external-dns pod
    ##
    mountPath: "/etc/coredns/tls/etcd"
    ## CA PEM file used to sign etcd TLS cert, should exist in the secret provided above
    ##
    caFilename: "ca.crt"
    ## Certificate PEM file, should exist in the secret provided above
    ## Will be used by external-dns to authenticate against etcd
    ##
    certFilename: "cert.pem"
    ## Private key PEM file, should exist in the secret provided above
    ## Will be used by external-dns to authenticate against etcd
    ##
    keyFilename: "key.pem"

## OpenStack Designate provider configuration to be set via arguments/env. variables
##
designate:
  ## Set Openstack environment variables (optional). Username and password will be saved in a kubernetes secret
  ## The alternative to this is to export the necessary Openstack environment variables in the extraEnv argument
  ##
  # username: "someuser"
  # password: "p@55w0rd"
  # authUrl: "https://mykeystone.example.net:5000/v3/"
  # regionName: "dev"
  # userDomainName: "development"
  # projectName: "myteamname"

  ## Use a host path custom CA (optional)
  ## This conflicts setting the above customCA to true and chart rendering will fail if you set customCA to true and specify customCAHostPath
  ##
  # customCAHostPath: /path/to/cafile

  ## Use a custom CA (optional)
  ##
  customCA:
    enabled: false
    ## The content of the custom CA file
    ##
    content: ""
    ## Location to mount custom CA
    ##
    mountPath: "/config/designate"
    ## Custom CA filename
    ##
    filename: "designate-ca.pem"

## DigitalOcean configuration to be set via arguments/env. variables
##
digitalocean:
  ## `DO_TOKEN` to set in the environment
  ##
  apiToken: ""
  ## Use an existing secret with key "digitalocean_api_token" defined.
  ## This ignores digitalocean.apiToken
  ##
  # secretName:

## Google configuration to be set via arguments/env. variables
##
google:
  ## Google Project to use
  ##
  project: ""
  ## Google Application Credentials
  ##
  serviceAccountSecret: ""
  serviceAccountSecretKey: "credentials.json"
  serviceAccountKey: ""

## Hetzner configuration to be set via arguments/env. variables
##
hetzner:
  ## Hetzner API token to use. If you do not want to set it clear-text,
  ## create the secret yourself and specify `hetzner.secretName`.
  ##
  ## Mutually exclusive with `hetzner.secretName`.
  ##
  token: ""

  ## Use an existing secret. Mutually exclusive with `hetzner.token`
  ##
  secretName: ""
  secretKey: "hetzner_token"

## Infoblox configuration to be set via arguments/env. variables
##
infoblox:
  ## Required keys
  ##
  wapiUsername: "admin"
  wapiPassword: ""
  gridHost: ""
  view: ""
  ## Optional keys
  ##
  ## Existing secret name, when in place wapiUsername and wapiPassword are not required
  ## secretName: ""
  ##
  domainFilter: ""
  noSslVerify: false
  wapiPort: ""
  wapiVersion: ""
  wapiConnectionPoolSize: ""
  wapiHttpTimeout: ""

## Linode configuration to be set via arguments/env. variables
##
linode:
  ## `LINODE_TOKEN` to set in the environment
  ##
  apiToken: ""
  ## Use an existing secret with key "linode_api_token" defined.
  ## This ignores linode.apiToken
  ##
  # secretName:

## OVH configuration to be set via arguments/env. variables
##
ovh:
  consumerKey: ""
  applicationKey: ""
  applicationSecret: ""

## Scaleway configuration to be set via arguments/env. variables
##
scaleway:
  scwAccessKey: ""
  scwSecretKey: ""
  scwDefaultOrganizationId: ""

## RFC 2136 configuration to be set via arguments/env. variables
##
rfc2136:
  host: ""
  port: 53
  zone: ""
  tsigSecret: ""
  tsigSecretAlg: hmac-sha256
  tsigKeyname: externaldns-key
  tsigAxfr: true
  ## Possible units [ns, us, ms, s, m, h], see more https://golang.org/pkg/time/#ParseDuration
  ##
  minTTL: "0s"

## PowerDNS configuration to be set via arguments/env. variables
##
pdns:
  apiUrl: ""
  apiPort: "8081"
  apiKey: ""
  ## Use an external secret where pdns_api_key is defined
  ##
  # secretName: ""

## TransIP configuration to be set via arguments/env. variables
##
transip:
  ## Account name to be used
  ##
  account: ""
  ##
  ## API key that is authorised for the account
  ##
  apiKey: ""

## VinylDNS configuration to be set via arguments/env. variables
##
vinyldns:
  host: ""
  accessKey: ""
  secretKey: ""

## Limit possible target zones by domain suffixes (optional)
##
domainFilters: []
## Exclude subdomains (optional)
##
excludeDomains: []
## Filter target zones by zone domain (optional)
##
zoneNameFilters: []
## Limit possible target zones by zone id (optional)
##
zoneIdFilters: []
## Filter sources managed by external-dns via annotation using label selector semantics (optional)
##
annotationFilter: ""
## When enabled, prints DNS record changes rather than actually performing them
##
dryRun: false
## When enabled, triggers run loop on create/update/delete events (optional, in addition of regular interval)
##
triggerLoopOnEvent: false
## Adjust the interval for DNS updates
##
interval: "1m"
## Verbosity of the ExternalDNS logs. Available values are:
## - panic, debug, info, warning, error, fatal, trace
##
logLevel: info
## Formats of the ExternalDNS logs. Available values are:
## - text, json
##
logFormat: text
## Modify how DNS records are synchronized between sources and providers (options: sync, upsert-only)
##
policy: upsert-only
## Registry Type. Available types are: txt, noop
## ref: https://github.com/kubernetes-sigs/external-dns/blob/master/docs/proposal/registry.md
##
registry: "txt"
## TXT Registry Identifier
##
txtOwnerId: ""
## Prefix to create a TXT record with a name following the pattern prefix.<CNAME record>
##
# txtPrefix: ""

## Extra Arguments to passed to external-dns
##
extraArgs: {}
## Extra env. variable to set on external-dns container.
##
## extraEnv:
## - name: VARNAME1
##   value: value1
## - name: VARNAME2
##   valueFrom:
##     secretKeyRef:
##       name: existing-secret
##       key: varname2-key
##
extraEnv: []

## Replica count
##
replicas: 1

## Pod affinity preset
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
## Allowed values: soft, hard
##
podAffinityPreset: ""

## Pod anti-affinity preset
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
## Allowed values: soft, hard
##
podAntiAffinityPreset: soft

## Node affinity preset
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
## Allowed values: soft, hard
##
nodeAffinityPreset:
  ## Node affinity type
  ## Allowed values: soft, hard
  ##
  type: ""
  ## Node label key to match
  ## E.g.
  ## key: "kubernetes.io/e2e-az-name"
  ##
  key: ""
  ## Node label values to match
  ## E.g.
  ## values:
  ##   - e2e-az1
  ##   - e2e-az2
  ##
  values: []

## Affinity for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## Note: podAffinityPreset, podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
##
affinity: {}

## Node labels for pod assignment
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}

## Tolerations for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

## Annotations for external-dns pods
##
podAnnotations: {}

## Additional labels for the pod(s).
##
podLabels: {}

## Pod priority class name
##
priorityClassName: ""

## Annotations for the secret
##
secretAnnotations: {}

## Options for the source type "crd"
##
crd:
  ## Install and use the integrated DNSEndpoint CRD
  ##
  create: false
  ## Change these to use an external DNSEndpoint CRD (E.g. from kubefed)
  ##
  apiversion: ""
  kind: ""

## Kubernetes svc configutarion
##
service:
  enabled: true
  ## Kubernetes svc type
  ##
  type: ClusterIP
  port: 7979
  ## Specify the nodePort value for the LoadBalancer and NodePort service types for the client port
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
  ##
  # nodePort:
  ## Static clusterIP or None for headless services
  ##
  # clusterIP: ""
  ## External IP list to use with ClusterIP service type
  ##
  externalIPs: []
  ## Use loadBalancerIP to request a specific static IP,
  ## otherwise leave blank
  ##
  # loadBalancerIP:
  ## Address that are allowed when svc is LoadBalancer
  ##
  loadBalancerSourceRanges: []
  ## Provide any additional annotations which may be required. This can be used to
  ## set the LoadBalancer service type to internal only.
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
  ##
  annotations: {}

  ## Provide any additional labels which may be required. This can be used to
  ## have external-dns show up in `kubectl cluster-info`
  ##  kubernetes.io/cluster-service: "true"
  ##  kubernetes.io/name: "external-dns"
  ##
  labels: {}

## ServiceAccount parameters
## https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
##
serviceAccount:
  create: true
  ## Service Account for pods
  ##
  name:
  ## Annotations for the Service Account
  ##
  annotations: {}
  ## Automount API credentials for a service account.
  ##
  automountServiceAccountToken: true

## RBAC parameteres
## https://kubernetes.io/docs/reference/access-authn-authz/rbac/
##
rbac:
  create: true
  ## Deploys ClusterRole by Default
  ##
  clusterRole: true
  ## RBAC API version
  ##
  apiVersion: v1
  ## Podsecuritypolicy
  ##
  pspEnabled: false

## Kubernetes Security Context
## https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
## Example:
## securityContext:
##   allowPrivilegeEscalation: false
##   readOnlyRootFilesystem: true
##   capabilities:
##     drop: ["ALL"]
##
securityContext: {}
podSecurityContext:
  fsGroup: 1001
  runAsUser: 1001
  # runAsNonRoot: true

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources: {}
#  limits:
#    cpu: 50m
#    memory: 50Mi
#  requests:
#    memory: 50Mi
#    cpu: 10m

## Liveness Probe. The block is directly forwarded into the deployment, so you can use whatever livenessProbe configuration you want.
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
##
livenessProbe:
  httpGet:
    path: /healthz
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 2
  successThreshold: 1
## Readiness Probe. The block is directly forwarded into the deployment, so you can use whatever readinessProbe configuration you want.
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
##
readinessProbe:
  httpGet:
    path: /healthz
    port: http
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

## Configure extra volumes
##
extraVolumes: []

## Configure extra volumeMounts
##
extraVolumeMounts: []

## Configure PodDisruptionBudget
## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
podDisruptionBudget: {}

## Prometheus Exporter / Metrics
##
metrics:
  enabled: false
  ## Metrics exporter pod Annotation and Labels
  ##
  # podAnnotations:
  #   prometheus.io/scrape: "true"
  #   prometheus.io/port: "7979"

  ## Prometheus Operator ServiceMonitor configuration
  ##
  serviceMonitor:
    enabled: false
    ## Namespace in which Prometheus is running
    ##
    # namespace: monitoring
    ## Interval at which metrics should be scraped.
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ##
    # interval: 10s
    ## Timeout after which the scrape is ended
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ##
    # scrapeTimeout: 10s
    ## ServiceMonitor selector labels
    ## ref: https://github.com/bitnami/charts/tree/master/bitnami/prometheus-operator#prometheus-configuration
    ##
    # selector:
    #   prometheus: my-prometheus
