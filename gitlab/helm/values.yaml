global:
  edition: ce

  application:
    create: false

  hosts:
    domain: example.com
    hostSuffix:
    https: false
    externalIP:
    ssh: ~
    gitlab: {}
    minio: {}
    registry: {}
    tls: {}
    smartcard: {}
    kas: {}
    pages: {}

  ingress:
    configureCertmanager: false
    provider: nginx
    annotations:
      kubernetes.io/ingress.class: "nginx"
    enabled: false
    tls:
      enabled: false
    path: /
    pathType: Prefix

  initialRootPassword: {}

  psql:
    connectTimeout:
    keepalives:
    keepalivesIdle:
    keepalivesInterval:
    keepalivesCount:
    tcpUserTimeout:
    password: {}

  gitaly:
    enabled: true

  praefect:
    enabled: false

  minio:
    enabled: false

  grafana:
    enabled: false

  appConfig:
    enableUsagePing: true
    enableSeatLink: true
    enableImpersonation:
    applicationSettingsCacheSeconds: 60
    defaultCanCreateGroup: true
    usernameChangingEnabled: true
    issueClosingPattern:
    defaultTheme:
    defaultProjectsFeatures:
      issues: true
      mergeRequests: true
      wiki: true
      snippets: true
      builds: true
    webhookTimeout:
    maxRequestDurationSeconds:

    contentSecurityPolicy:
      enabled: false
      report_only: true
      # directives: {}

    object_store:
      enabled: false
      proxy_download: true
      storage_options: {}
        # server_side_encryption:
        # server_side_encryption_kms_key_id
      connection: {}
        # secret:
        # key:
    lfs:
      enabled: false
      proxy_download: true
      bucket: git-lfs
      connection: {}
        # secret:
        # key:
    artifacts:
      enabled: false
      proxy_download: true
      bucket: gitlab-artifacts
      connection: {}
        # secret:
        # key:
    uploads:
      enabled: false
      proxy_download: true
      bucket: gitlab-uploads
      connection: {}
        # secret:
        # key:
    packages:
      enabled: false
      proxy_download: true
      bucket: gitlab-packages
      connection: {}
    externalDiffs:
      enabled: false
      when:
      proxy_download: true
      bucket: gitlab-mr-diffs
      connection: {}
    terraformState:
      enabled: false
      bucket: gitlab-terraform-state
      connection: {}
    dependencyProxy:
      enabled: false
      proxy_download: true
      bucket: gitlab-dependency-proxy
      connection: {}

    pseudonymizer:
      configMap:
      bucket: gitlab-pseudo
      connection: {}
        # secret:
        # key:
    backups:
      bucket: gitlab-backups
      tmpBucket: tmp

    incomingEmail:
      enabled: false

    serviceDeskEmail:
      enabled: false

    ldap:
      preventSignin: false

    omniauth:
      enabled: false

    sentry:
      enabled: false

    smartcard:
      enabled: false

    sidekiq:
      routingRules: []

    initialDefaults: {}

  geo:
    enabled: false

  kas:
    enabled: false

  pages:
    enabled: false

  smtp:
    enabled: false

  time_zone: UTC

  antiAffinity: soft

  workhorse:
    serviceName: webservice-default

  webservice:
    workerTimeout: 60

  serviceAccount:
    enabled: false

upgradeCheck:
  enabled: false

certmanager:
  install: false

nginx-ingress:
  enabled: false

prometheus:
  install: false

redis:
  install: true

postgresql:
  postgresqlUsername: gitlab
  postgresqlPostgresPassword: bogus
  install: true
  postgresqlDatabase: gitlabhq_production

  metrics:
    enabled: true

registry:
  enabled: false

shared-secrets:
  enabled: true

gitlab-runner:
  install: false

gitlab:
  task-runner:
    enabled: false
